/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "zmk-helpers/key-labels/42.h"                                                  // Source key-labels.

#define KEYS_L LT5 LT4 LT3 LT2 LT1 LT0 LM5 LM4 LM3 LM2 LM1 LM0 LB5 LB4 LB3 LB2 LB1 LB0
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // Right-hand keys.
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                                  // Thumb keys.

#define SWP_POS1 LB0
#define SWP_POS2 LB1

#define DEF 0
#define NUM 1
#define MOD 2
#define NAV 3


/ {
    macros {
        m0: m0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp J &kp O &kp R &kp G &kp E &kp N &kp S &kp O &kp N &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "M0";
        };

        m1: m1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp J &kp O &kp R &kp G &kp E &kp N &kp S &kp O &kp N &kp AT &kp N &kp E &kp T &kp S &kp K &kp O &kp P &kp E &kp DOT &kp C &kp O &kp M>;
            label = "M1";
        };

    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <330>;
            quick-tap-ms = <190>;
            require-prior-idle-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <330>;
            quick-tap-ms = <190>;
            require-prior-idle-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
        };

        t_hyp: t_hyp {
            compatible = "zmk,behavior-hold-tap";
            label = "TAB_HYPER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <190>;
            flavor = "balanced";
            hold-trigger-key-positions = <LT5>;
        };

        // Swapper for smart alt+tab
        wswap: wswap {
            compatible = "zmk,behavior-smart-toggle";
            #binding-cells = <0>;
            bindings = <&kp LGUI>, <&kp TAB>;
            ignored-key-positions = <SWP_POS1 SWP_POS2>;
        };
    };

    combos {
        compatible = "zmk,combos";

        enter {
            bindings = <&kp ENTER>;
            key-positions = <RM0 RM1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEF {
            label = "DEFAULT";
            bindings = <
&t_hyp LG(LS(LC(LALT))) TAB  &kp Q  &kp W  &kp E     &kp R     &kp T    /* */  &kp Y    &kp U      &kp I      &kp O    &kp P     &kp BSPC
&mt LCTRL ESC                &kp A  &kp S  &kp D     &kp F     &kp G    /* */  &kp H    &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT                    &kp Z  &kp X  &kp C     &kp V     &kp B    /* */  &kp N    &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                                           &kp LALT  &kp LGUI  &mo NUM  /* */  &mo MOD  &kp SPACE  &mo NAV
            >;
        };

        NUM {
            label = "NUM";
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5     /* */  &kp N6     &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans     &trans  &trans  &trans  &trans  &kp LBKT   /* */  &kp RBKT   &trans  &trans  &trans  &trans  &mt PIPE BSLH
&trans     &trans  &trans  &trans  &trans  &kp MINUS  /* */  &kp EQUAL  &trans  &trans  &trans  &trans  &trans
                           &trans  &trans  &none      /* */  &kp LGUI   &trans  &trans
            >;
        };

        MOD {
            label = "MOD";
            bindings = <
&kp TAB     &kp F1        &kp F2        &kp F3        &kp F4     &kp F5   /* */  &kp F6   &kp F7    &kp F8     &kp F9    &kp F10    &kp DEL
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans     &kp F11  /* */  &kp F12  &sk LGUI  &sk LSHFT  &sk LALT  &sk LCTRL  &trans
&trans      &trans        &trans        &trans        &kp LSHFT  &wswap   /* */  &trans   &trans    &trans     &trans    &trans     &bootloader
                                        &trans        &trans     &trans   /* */  &none    &trans    &trans
            >;
        };

        NAV {
            label = "NAV";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    /* */  &trans  &trans     &trans    &trans     &trans    &kp BSPC
&trans  &trans  &trans  &trans  &trans  &to GAME  /* */  &trans  &kp PG_UP  &kp UP    &kp PG_DN  &kp HOME  &trans
&trans  &trans  &trans  &trans  &trans  &trans    /* */  &trans  &kp LEFT   &kp DOWN  &kp RIGHT  &kp END   &trans
                        &trans  &trans  &trans    /* */  &trans  &trans     &none
            >;
        };

        GAME {
            label = "GAME";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R       &kp T        /* */  &kp Y    &kp U  &kp I        &kp O    &kp P     &kp BSPC
&kp ESC    &kp A  &kp S  &kp D      &kp F       &kp G        /* */  &kp H    &kp J  &kp K        &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V       &kp B        /* */  &kp N    &kp M  &kp COMMA    &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LCTRL  &kp SPACE   &mo GAMENUM  /* */  &none    &none  &mo GAMENUM
            >;
        };

        GAMENUM {
            label = "GAMENUM";
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5       /* */  &kp N6   &kp N7  &kp N8  &kp N9  &kp N0   &kp DEL
&trans     &kp F1  &kp F2  &kp F3  &kp F4  &kp F5       /* */  &kp F6   &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans     &trans  &trans  &trans  &trans  &kp F11      /* */  &kp F12  &trans  &trans  &trans  &trans   &trans
                           &trans  &trans  &to DEFAULT  /* */  &trans   &trans  &none
            >;
        };
    };
};
